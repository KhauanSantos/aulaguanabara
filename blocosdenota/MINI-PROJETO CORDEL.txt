MINI-PROJETO CORDEL

**********************************

Esse projeto irá incluir o efeito parallax às imagens de fundo e uma adaptação dinâmica do tamanho da fonte de acordo com o tamanho da tela. E o conteúdo que vamos dar vida, transformando em um site um belo cordel.

**********************************


AJUSTES NO HTML DO PROJETO*

Começaremos pelo cabeçalho, ou header***

   <header>
        <h1>Cordel Moderno</h1>
        <p>Por <a href="https://www.recantodasletras.com.br/poesias/3186743" target="_blank">Milton Duarte</a></p>
    </header>

Em nosso header irá conter o h1 (titulo do nosso cordel), e também logo abaixo um paragrafo com os créditos ao autor do cordel (Milton Duarte) com um link para o site oficial do cordel. 

Logo em seguida, iremos para o rodapé, ou footer***

    <footer>
        <p>Site criado por <a href="https://github.com/KhauanSantos" target="_blank">Khauan Santos</a> para o <a href="https://www.cursoemvideo.com" target="_blank">CursoemVideo</a></p>
    </footer>

No footer, iremos apenas montar um paragrafo com informações sobre o criador do site e com alguns links para o perfil pessoal do mesmo. 


Organizando o conteúdo em
seções***

Agora vamos começar a organizar o conteúdo em seções, que serão formatadas para intercalar áreas brancas com áreas de imagens. Você pode usar qualquer técnica, mas a que eu achei mais coerente semanticamente foi dividir tudo em <section> com um ou dois parágrafos e usando quebras de linha para organizar as estrofes. 

   <section>
        <p>
            Estou ficando cansado <br>
            Da tal tecnologia <br>
            Só se fala por e-mail <br>
            Mensagem curta e fria <br>
            Twitter e Facebook <br>
            Antes que eu caduque <br>
            Vou dizer tudo em poesia.
        </p>
    </section>

    <section>
        <p>
            Arroba agora não pesa <br>
            É parte de um endereço <br>
            Ponto final nem se usa <br>
            Ou vai até no começo <br>
            Agora é .com <br>
            Se o saite é muito bom <br>
            Ele vale um alto preço. 
        </p>

        <p>
            Pra piorar a liguagem <br>
            O emoticom é um risco <br>
            Tem símbolo para tudo <br>
            Ponto e vírgula e um asterisco <br>
            Um beijo significa <br>
            Pra entender como fica <br>
            Decifre esse rabisco.
        </p>
     </section>

******************************

CSS NO PROJETO

Começaremos as configurações em CSS com ajustes na parte de HTML, colocando cada section em uma class. Para quando configuramos as imagens de fundo, não precisarmos quebrar a cabeça em qual parte irá ficar. 

Após isso, iremos colocar a configuração global com margin: 0px; e padding:0px;

Deixaremos o HTML e o Body com a altura mínima (min-height) de 100vh, ou 100%, juntamente com o background-color: darkgray;

O header terá o background-color: black, a fonte terá a color: White e teremos o text-align: center.

Já o h1 do header ficará com o padding-top (espaçamento no topo) de 50px. 
****IMPORTANTE***** 
Para deixarmos todo o texto em letra maiúscula, podemos usar a personalização 'text-transform: uppercase;' ou 'font-variant: small-caps'.


Para configurarmos o paragrafo do header, teremos a seguinte personalização: 

padding-bottom: 50px; (Para termos uma simetria com o padding-top do h1).

Nos links que teremos na página, deixaremos a cor da fonte branca, a fonte em negrito e a decoração sem a linha por baixo da letra. Para isso, colocaremos essas configurações: 

a {
	color: White;
	text-decoration: none;
	font-weight: bolder;
}

Logo em seguida, colocaremos uma configuração para quando estivermos com o ponteiro do mouse em cima do link:

a:hover {
	text-decoration: underline;
}

Configurações do rodapé (footer):

footer {
    background-color: black;
    color: white;
    text-align: center;
    padding: 4px;
}

************

Configurando as sections: 

Para configurarmos as sections normais e as de imagem. Iremos diferencia-las inicialmente por meio da coloração:

section.normal {
    background-color: white;
    color: black;
}

section.imagem {
    background-color: rgb(75, 73, 73);
    color: white;
}

Também faremos uma personalização para ambas as sections:

section {
    padding-top: 10vh;
    padding-bottom: 10vh;
    line-height: 2em;
    padding-left: 30px;
}

Esses paddings deixarão as duas sections com espaçamentos muito maiores para a imagem com paralax funcionar e se adaptar a tela. Também colocaremos um espaçamento nas letras e dos lados para melhor leitura.

Para finalizar, colocaremos um bloco no paragrafo da section.imagem para quando colocarmos a imagem por cima, não termos dificuldade para enxergar as letras.

**********************

COLOCANDO AS FONTES AO PROJETO

Primeiramente, importaremos fontes do Google Fonts para deixar nosso site com um visual melhorado, as fontes serão: Passion One (para o titulo) e Sriracha (para as sections da poesia). 

Ficará dessa forma: 

@import url('https://fonts.googleapis.com/css2?family=Passion+One:wght@400;700;900&display=swap');

@import url('https://fonts.googleapis.com/css2?family=Sriracha&display=swap');

:root {
    --fonte1: Verdana, Geneva, Tahoma, sans-serif;
    --fonte2: "Passion One", serif;
    --fonte3: "Sriracha", serif;
}


*****

Às vezes o TEXTO do nosso site fica adequado para telas maiores (desktop) mas quando abrimos a página em uma tela menor (celular), começa a ficar grande demais para ler... Então quando surgir esse tipo de problema, temos que tentar adaptar o texto do site pensando nessa questão.

No desafio "Cordel Moderno" usamos um recurso que faz com que o TEXTO do site aumente ou diminua de acordo com o tamanho (tamanho da largura) da janela do navegador.

Para fazer isso, a dica é usar as unidades de medidas relativas das CSS, como o vh e vw. Basicamente, vh significa " viewport height " e vw significa " viewport width ". 

Como nós já sabemos, de forma resumida a viewport é a área visível de uma janela. As unidades de medida vh e vw usam justamente o tamanho da viewport como referência para definir o tamanho das fontes de texto.

Dessa forma, podemos configurar o nosso texto de uma maneira que ele aumente ou diminua dinamicamente, adaptando o tamanho desse texto para diferentes tamanhos de tela.  

Sendo assim, se você quer formatar o seu texto dessa forma, ao invés de configurá-lo com unidades de medida absolutas (como px ou em), configure o tamanho do texto (font-size) com a unidade de medida "vw". 

Exemplo:

Para o título principal: font-size: 10vw;

Paro o corpo da página: font-size: 3.5vw;

Na primeira opção o tamanho da fonte vai ser referente a 10% da largura da viewport. Já na segunda opção, será referente a 3.5% da largura dessa viewport.

Dessa forma, quando a tela for grande, ele coloca a letra grande... Quando a tela é menor, ele coloca a letra menor, alterando a o tamanho da fonte dinamicamente baseado na largura da tela. 

Observação: Essa técnica das medidas vh e vw para adaptar o texto não é o melhor recurso para fazer esse tipo de adaptação dinâmica. Pode até funcionar, mas não gera um resultado 100% perfeito. O ideal para fazer esse tipo de adaptação seria usar Media Queries, um conceito que veremos mais pra frente.


**************************

IMAGENS COM EFEITO PARALLAX

Para começar, criaremos no arquivo HTML dois id's para as nossas classes de imagem que criamos lá no inicio, iremos fazer isso para conseguirmos configurar cada imagem separadamente uma da outra, já que elas serão diferentes. 

Ficará dessa forma: 

<section class="imagem" id="img01">
<section class="imagem" id="img02">

E obviamente adicionaremos esses id's em nosso arquivo CSS: 

section#img01 {
}


section#img02 {
}

Após isso, iremos colocar e personalizar cada imagem detalhadamente... 

Para colocar a imagem, utilizaremos o background-image: url(../pasta de destino onde está a imagem)

Logo em seguida mudaremos a posição das imagens para deixá-las posicionadas exatamente onde precisamos, para isso iremos usar o background-position: right center;

Para termos uma imagem compacta e que não altere o tamanho quando diminuímos a tela, colocarem um background-size: cover; 

Iremos também acrescentar algumas personalizações para quando colocarmos o efeito paralax nas imagens, elas estarem perfeitas...

Iremos usar o box-shadow na section.imagem dessa forma: 

box-shadow: inset 6px 6px 13px 0px rgba(0, 0, 0, 0.638);

E o text-shadow na section.imagem > p dessa forma

text-shadow: 1px 1px 0px black;

Com tudo isso feito, essas são as mudanças no arquivo CSS:

section.imagem {
    background-color: rgb(55, 55, 55);
    color: white;
    box-shadow: inset 6px 6px 13px 0px rgba(0, 0, 0, 0.638);
}

section.imagem > p {
    display: inline-block;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.512);
    text-shadow: 1px 1px 0px black;
}

section#img01 {
    background-image: url('../desafio012/imagens/background001.jpg');
    background-position: right center;
    background-size: cover;
}

section#img02 {
    background-image: url('../desafio012/imagens/background002.jpg');
    background-position: right center;
    background-size: cover;
}

section.imagem {
    background-color: rgb(55, 55, 55);
    color: white;
    box-shadow: inset 6px 6px 13px 0px rgba(0, 0, 0, 0.638);
    background-size: cover;
}

section.imagem > p {
    display: inline-block;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.512);
    text-shadow: 1px 1px 0px black;
}

section#img01 {
    background-image: url('../desafio012/imagens/background001.jpg');
    background-position: right center;
}

section#img02 {
    background-image: url('../desafio012/imagens/background002.jpg');
    background-position: right center;
}

Para finalizar, colocaremos o efeito paralax, e é bem simples de ser feito. 

Colocaremos no section.imagem a personalização background-attatchment:fixed; 

section.imagem {
    background-color: rgb(55, 55, 55);
    color: white;
    box-shadow: inset 6px 6px 13px 0px rgba(0, 0, 0, 0.638);
    background-size: cover;
    background-attachment: fixed;
}

Finalizado! 